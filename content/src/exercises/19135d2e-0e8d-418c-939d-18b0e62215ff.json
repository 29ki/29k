{
  "en": {
    "liveDuration": 30,
    "slides": [
      {
        "type": "host",
        "hostNotes": [
          {
            "text": "Welcome. I am X and today we will work for around 30 minutes on how emotions are felt in our bodies, and how we can meet them with self-compassion.\n\nWe’ll be doing a meditation followed by time for reflection and sharing with each other."
          },
          {
            "text": "Let’s start with a mini check-in. How are you feeling right now? Please answer in two-three words. X, would you like to start?\n\n> Let everyone in the session, including yourself, check in one by one.\n\nThank you all for checking in. Let’s get started."
          }
        ]
      },
      {
        "type": "content",
        "hostNotes": [
          {
            "text": "Find a comfortable position. I will start the audio exercise and we'll meet back here afterwards. \n\n> Tap play to start the audio exercise"
          }
        ],
        "content": {
          "lottie": {
            "subtitles": "https://res.cloudinary.com/cupcake-29k/raw/upload/q_auto,t_global/v1709650541/SRT%20(captions)%20files/Open_up_to_compassion_dao5mx.srt",
            "audio": "https://res.cloudinary.com/cupcake-29k/video/upload/v1709650589/Audio/Open_up_to_compassion_bgnuxu.mp3",
            "durationTimer": true,
            "source": "https://res.cloudinary.com/cupcake-29k/raw/upload/t_card_image/v1676977421/Lottie/audio_meditation_default_black_default_omemwt.json"
          }
        }
      },
      {
        "type": "reflection",
        "hostNotes": [
          {
            "text": "Now we’ll take 1 minute to reflect on our own.\n\nHow did you experience getting physical with emotions, and meeting them with compassion?"
          },
          {
            "text": "You can take notes on a piece of paper or just mental notes in your head. And there is no right or wrong here, our answers are our own. 1 minute starting now.\n\n> Press play to start the timer.\n\nThat’s 1 minute and it’s time to move on."
          }
        ],
        "content": {
          "heading": "How did you experience doing this exercise?",
          "lottie": {
            "durationTimer": true,
            "duration": 59,
            "source": "https://res.cloudinary.com/cupcake-29k/raw/upload/t_card_image/v1676642915/Lottie/default_1min_black_rosi2l.json"
          }
        }
      },
      {
        "type": "sharing",
        "hostNotes": [
          {
            "text": "Now we are getting into the sharing part. We have three rules for sharing:\n\n1. **What is said in here, stays in here.**\n2. **All you need to do is listen.** There is no fixing, helping or advice-giving needed. We are just showing up and exploring what ourselves and others are going through."
          },
          {
            "text": "3. **Everything on the inside is okay.** Anger, love, hatred, sadness. Whatever shows up. No wrongs, no rights. It is what it is.\n\nThere will be a timer set for 2 minutes as an indicator. If you don’t want to share you can always say ‘pass’."
          },
          {
            "text": "Who would like to start?\n\n> Let everyone (or as many as you got time for) share one by one. Press play to start the timer. Re-start for each new sharing.\n\nThank you so much everyone."
          }
        ],
        "id": "Sharing 1",
        "content": {
          "heading": "How did you experience doing this exercise?",
          "lottie": {
            "durationTimer": true,
            "duration": 120,
            "source": "https://res.cloudinary.com/cupcake-29k/raw/upload/t_card_image/v1676639253/Lottie/default_2min_black_o6egey.json"
          }
        }
      },
      {
        "type": "host",
        "hostNotes": [
          {
            "text": "Well done. Emotions are here to be felt, and being present with them can allow us to be compassionate and authentic. You can continue your practice with a mission:\n\nFor the rest of today, whenever you feel an emotion stirring up something inside – take a moment to localize it in the body, and make space for it with compassion."
          },
          {
            "text": "Before we leave this space let’s do a mini check-out. \n\nHow are you feeling right now? Has anything shifted? Please answer in two-three words."
          },
          {
            "text": "Who would like to start?\n\n> Let everyone in the session check out one by one.\n\nThank you all for checking out and for joining this session today.\n\n> Finish session to send everyone off to the exit experience."
          }
        ]
      },
      {
        "type": "instruction",
        "content": {
          "text": "Emotions are here to be felt, and being present with them can allow us to be compassionate and authentic. \n\nYou can continue your practice with a mission: \n\nFor the rest of today, whenever you feel an emotion stirring up something inside – take a moment to localize it in the body, and make space for it with compassion.",
          "image": {
            "source": "https://res.cloudinary.com/cupcake-29k/image/upload/q_auto,t_global/v1711547476/Images/card_Open_up_to_compassion_xqbsa2.png"
          },
          "heading": "Well done. "
        }
      }
    ],
    "theme": {
      "textColor": "#2E2E2E",
      "backgroundColor": "#cacaca"
    },
    "hidden": false,
    "locked": false,
    "name": "Open up to compassion",
    "live": true,
    "published": true,
    "asyncDuration": 7,
    "card": {
      "imageBackgroundColor": "",
      "image": {
        "source": "https://res.cloudinary.com/cupcake-29k/image/upload/t_card_image/v1711547476/Images/card_Open_up_to_compassion_xqbsa2.png"
      }
    },
    "coCreators": [
      {
        "name": "Rachel Brathen, yoga girl, voice.",
        "url": "https://www.yogagirl.com/rachels-corner/bio",
        "image": "https://res.cloudinary.com/cupcake-29k/image/upload/t_cocreator_image/v1709567296/Contributors/Yoga_Girl_016895_color_oju3wq_-_Square_Post_mbemkp.png"
      },
      {
        "name": "Kristin Neff & Chris Germer, CMSC, original research",
        "url": "https://centerformsc.org/",
        "image": "https://res.cloudinary.com/cupcake-29k/image/upload/t_cocreator_image/v1697723039/Images/Germer%2C%20Neff.png"
      },
      {
        "name": "Erik Fernholm, editor",
        "url": "https://www.linkedin.com/in/lyckoaktivist/?originalSubdomain=se",
        "image": "https://res.cloudinary.com/cupcake-29k/image/upload/t_cocreator_image/v1665412608/Contributors/Erik%20Fernholm.png"
      },
      {
        "url": "https://openprocessing.org/user/183691?view=sketches&o=228",
        "name": "Aaron Reuland, artwork",
        "image": "https://res.cloudinary.com/cupcake-29k/image/upload/t_cocreator_image/v1713964400/Images/user183691_i74pfh.jpg"
      }
    ],
    "introPortal": {
      "textColor": "#2E2E2E",
      "hostNotes": [
        {
          "text": "> Start the session when you're ready to go"
        }
      ],
      "videoLoop": {
        "p5JsScript": {
          "lang": "javascript",
          "code": "function loadScript(url, callback) {\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src = url;\n\n    // Optional: Provide a callback function to run once the script is loaded\n    script.onload = function() {\n        if (callback) callback();\n    };\n\n    // Append the script to the document's head\n    document.head.appendChild(script);\n}\n\n// URLs of the external JavaScript libraries\nconst simplexNoiseURL = \"https://openprocessing-usercontent.s3.amazonaws.com/files/user183691/visual2179025/h5636a7067b4b5f2d98624459645bf990/simplexNoise.js\";\nconst spectralURL = \"https://openprocessing-usercontent.s3.amazonaws.com/files/user183691/visual2179025/h5636a7067b4b5f2d98624459645bf990/spectral.min.js\";\n\n// Load the simplexNoise library first\nloadScript(simplexNoiseURL, function() {\n    console.log(\"simplexNoise.js loaded successfully!\");\n\n    // Load the spectral library next\n    loadScript(spectralURL, function() {\n        console.log(\"spectral.min.js loaded successfully!\");\n\n        // Now both libraries are loaded, you can safely use their functionality here\n        // For example, initialize your sketch or call a function that relies on these libraries\n    });\n});\n\n\n\nlet colors = [\"#c78b25\", \"#4e5b6d\", \"#636b4b\", \"#2b5c72\", \"#973535\", \"#ad9690\", \"#15171f\"]\n\nlet drops = []\nlet splatters = []\nlet straps = []\nlet simplex\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tsimplex = new openSimplexNoise(Date.now())\n\tbackground(210);\n\tlet x = random(width)\n\tlet s = noise(x / 100) * width / 50\n\tdrops.push(new drop(x, s))\n}\n\nfunction draw() {\n\tif (frameCount % 50 == 0 && frameCount < 2500) {\n\n\t\tlet x = map(simplex.noise2D(frameCount / 300, random()), -1, 1, -width / 4, width + width / 4)\n\t\tlet s = noise(x / 100) * width / 50\n\t\tdrops.push(new drop(x, s))\n    straps.push(new strap(random(width), random(height / 5, height / 2.5)))\n\t\tstraps.push(new strap(random(width), random(height / 5, height / 2.5)))\n\n\t}\n\n\n\tif (frameCount % 100 == 0 && frameCount > 500 && frameCount < 4000) {\n\t\tsplatters.push(new splatter(random(width), random(0, height * 0.66), random(height * 0.02, height * 0.1)))\n\t}\n\tfor (let d of drops) {\n\t\td.move();\n\t\td.show();\n\t\td.done();\n\t}\n\tfor (let s of splatters) {\n\t\ts.move();\n\t\ts.show();\n\t\ts.done();\n\t}\n\tfor (let st of straps) {\n\t\tst.move();\n\t\tst.show();\n\t\tst.done();\n\t}\n\n}\n\nclass splatter {\n\tconstructor(x, y, r) {\n\t\tthis.pos = createVector(x, y);\n\t\tthis.color1 = random(colors)\n\t\tthis.color2 = random(colors)\n\t\tthis.r = r\n\t\tthis.currentR = 0\n\t\tthis.runs = []\n\t\tlet amount = floor(random(15, 30))\n\t\tlet startAngle = random(TAU)\n\t\tfor (let a = 0; a < TAU; a += TAU / amount) {\n\t\t\tlet aOff = random(-TAU / 12, TAU / 12)\n\t\t\tlet sizeRange = this.r / (amount / 4)\n\t\t\tvar sp = {\n\t\t\t\tangle: a + aOff,\n\t\t\t\tsize: random(sizeRange * 0.75, sizeRange * 1.5)\n\t\t\t}\n\t\t\tthis.runs.push(sp)\n\t\t}\n\t\tthis.speed = this.r / 40\n\t}\n\n\tmove() {\n\t\tthis.currentR += this.speed\n\t}\n\n\tshow() {\n\t\tlet mixer = map(this.currentR, 0, this.r, 0, 1)\n\t\tlet filler = color(spectral.mix(this.color1, this.color2, mixer))\n\t\t// let alpha= map(this.currentR, 0, this.r, 2, 100)\n\t\t// filler.setAlpha(alpha)\n\t\tfill(filler)\n\n\t\t//probably need to add some jiggle\n\t\tfor (let r of this.runs) {\n\t\t\tlet quaver = simplex.noise2D(r.angle, this.currentR / (this.r / 3)) * r.size / 4\n\t\t\tlet xoff = simplex.noise2D(r.angle, this.currentR / 100, this.pos.x) * this.currentR / 5\n\t\t\tlet yoff = noise(r.angle, this.currentR / 100, this.pos.y) * this.currentR\n\t\t\tellipse(this.pos.x + cos(r.angle) * this.currentR + xoff, this.pos.y + sin(r.angle) * this.currentR + yoff, r.size + quaver)\n\t\t}\n\t}\n\n\tdone() {\n\t\tif (this.currentR >= this.r) {\n\t\t\tlet index = splatters.indexOf(this);\n\t\t\tsplatters.splice(index, 1);\n\t\t}\n\n\t}\n}\n\nclass drop {\n\tconstructor(x, s) {\n\t\tthis.pos = createVector(x, -s)\n\t\tthis.color1 = random(colors)\n\t\tthis.color2 = random(colors)\n\t\tthis.size = s\n\t\tthis.speed = random(1, 5)\n\t}\n\n\tmove() {\n\t\tlet xdrift = simplex.noise2D(this.pos.x / 100, frameCount / 50) * this.size / 10\n\t\tlet mover = createVector(xdrift, this.speed)\n\t\tthis.pos.add(mover)\n\n\t}\n\n\tshow() {\n\t\tnoStroke()\n\t\tlet quaver = simplex.noise3D(this.pos.y / 200, this.pos.x / 200, frameCount / 50) * this.size / 2\n\t\tlet m = map(this.pos.y, 0, height, 0, 1)\n\t\tlet mixer = color(spectral.mix(this.color1, this.color2, m))\n\t\tlet a = map(this.size, width / 100, width / 10, 75, 1)\n\t\tmixer.setAlpha(a)\n\t\tfill(mixer)\n\t\tellipse(this.pos.x, this.pos.y, this.size + quaver)\n\t}\n\n\tdone() {\n\t\tif (this.pos.y > this.size + height) {\n\t\t\tlet index = drops.indexOf(this);\n\t\t\tdrops.splice(index, 1);\n\t\t}\n\n\t}\n}\n\nclass strap {\n\tconstructor(x, h) {\n\t\tthis.h = h\n\t\tthis.w = random(width / 100, width / 40)\n\t\tthis.pos = createVector(x, height + this.w)\n\t\tthis.color1 = random(colors)\n\t\tthis.color2 = random(colors)\n\t}\n\n\tmove() {\n\t\tthis.pos.y -= 1\n\t}\n\n\tshow() {\n\t\tpush()\n\t\tlet mix = map(this.pos.y, height, height - this.h, 0, 1)\n\t\tlet filler = color(spectral.mix(this.color1, this.color2, mix))\n\t\tfill(filler)\n\t\tlet curve = map(this.pos.y, height, height - this.h, 0, this.h)\n\t\tlet xoff = simplex.noise3D(this.pos.x, this.pos.y / (this.h * 2), frameCount / 200) * curve\n\t\tlet sizing = map(this.pos.y, height, height - this.h, this.w, 1)\n\t\tellipse(this.pos.x + xoff, this.pos.y, sizing)\npop()\n\t}\n\n\tdone() {\n\t\tif (this.pos.y < height - this.h) {\n\t\t\tlet index = straps.indexOf(this);\n\t\t\tstraps.splice(index, 1);\n\t\t}\n\t}\n}"
        },
        "audio": "https://res.cloudinary.com/cupcake-29k/video/upload/v1712905258/Audio/portal_audio_open_up_to_compassion_jclox4.mp3"
      }
    },
    "tags": [
      "db34d82a-4c48-4ddd-9de5-f562d8aa1bc9",
      "34100e43-2eb8-4d35-8eb0-9fa9f78e4935"
    ],
    "link": "https://aware.29k.org/open-up-to-compassion",
    "id": "19135d2e-0e8d-418c-939d-18b0e62215ff",
    "async": true,
    "description": "Investigate where emotions are felt in your body, to practice self-compassion when we face difficult emotions and self-critical thoughts."
  },
  "pt": {
    "liveDuration": 30,
    "slides": [
      {
        "type": "host",
        "hostNotes": [
          {
            "text": "Bem-vindos. Sou X e hoje vamos aprender durante cerca de 30 minutos como sentimos as emoções nos nossos corpos e como podemos acolhê-las com autocompaixão.\n\nVamos fazer uma meditação seguida de um tempo para reflexão e partilha entre todos."
          },
          {
            "text": "Vamos começar com um mini check-in. Como te estás a sentir agora? Por favor, responde com duas ou três palavras. X, queres começar?\n\n> Deixa que todos na sessão, incluindo-te a ti, façam o check-in individualmente.\n\nObrigada/o a todos por fazerem o check-in. Vamos começar."
          }
        ]
      },
      {
        "type": "content",
        "hostNotes": [
          {
            "text": "Encontra uma posição confortável. Vou iniciar a meditação.\n\n> Carrega play para iniciar a meditação"
          }
        ],
        "content": {
          "lottie": {
            "subtitles": "",
            "audio": "https://res.cloudinary.com/cupcake-29k/video/upload/v1716388572/FJN/Meditations/Opening_Space_to_Compassion_amzllt_ppzy9u.mp3",
            "durationTimer": true,
            "source": "https://res.cloudinary.com/cupcake-29k/raw/upload/t_card_image/v1676977421/Lottie/audio_meditation_default_black_default_omemwt.json"
          }
        }
      },
      {
        "type": "reflection",
        "hostNotes": [
          {
            "text": "Agora, vamos tirar 1 minuto para refletir individualmente.\n\nComo foi a tua experiência de te ligares fisicamente com as emoções e acolhê-las com compaixão?"
          },
          {
            "text": "Podes tomar notas num papel ou mentalmente. Não há certo ou errado, as respostas são só tuas. 1 minuto a começar agora.\n\n> Carrega play para iniciar o cronómetro.\n\nPassou 1 minuto e é hora de seguir em frente."
          }
        ],
        "content": {
          "heading": "O que sentiste ao fazer este exercício?",
          "lottie": {
            "durationTimer": true,
            "duration": 59,
            "source": "https://res.cloudinary.com/cupcake-29k/raw/upload/t_card_image/v1676642915/Lottie/default_1min_black_rosi2l.json"
          }
        }
      },
      {
        "type": "sharing",
        "hostNotes": [
          {
            "text": "Agora vamos para a parte da partilha. Temos três regras para a partilha:\n\n1. **O que é dito aqui, fica aqui.**\n2. **Só tens de ouvir.** Não há necessidade de corrigir, ajudar ou dar conselhos. Estamos apenas a explorar o que estamos a sentir."
          },
          {
            "text": "3. **Tudo o que sentires é aceitável.** Raiva, amor, ódio, tristeza. O que quer que apareça. Sem erros, sem acertos. É o que é.\n\nHaverá um cronómetro de 2 minutos como indicador. Se não quiseres partilhar, podes sempre dizer 'passo'."
          },
          {
            "text": "Quem gostaria de começar?\n\n> Deixa que todos (ou o máximo de pessoas para as quais houver tempo) partilhem individualmente. Carrega play para iniciar o cronómetro. Reinicia para cada nova partilha.\n\nMuito obrigada/o a todos."
          }
        ],
        "id": "Sharing 1",
        "content": {
          "heading": "O que sentiste ao fazer este exercício?",
          "lottie": {
            "durationTimer": true,
            "duration": 120,
            "source": "https://res.cloudinary.com/cupcake-29k/raw/upload/t_card_image/v1676639253/Lottie/default_2min_black_o6egey.json"
          }
        }
      },
      {
        "type": "host",
        "hostNotes": [
          {
            "text": "Muito bem. As emoções estão aqui para serem sentidas, e estar presente com elas permite-nos ser compassivos e autênticos. Podes continuar a sua prática com uma missão:\n\nDurante o resto do dia, sempre que sentires uma emoção surgir dentro de ti tira um momento para a localizares no corpo e dá-lhe espaço com compaixão."
          },
          {
            "text": "Antes de deixarmos este espaço, vamos fazer um mini check-out.\n\nComo te estás a sentir agora? Alguma coisa mudou? Por favor, responde com duas ou três palavras."
          },
          {
            "text": "Quem gostaria de começar?\n\n> Deixa que todos na sessão façam o check-out individualmente.\n\nObrigada/o a todos por fazerem o check-out e por participarem nesta sessão de hoje.\n\n> Termina a sessão para encaminhares todos para a saída."
          }
        ]
      },
      {
        "type": "instruction",
        "content": {
          "text": "As emoções estão aqui para serem sentidas, e estares presente com elas permite-te ser compassivo e autêntico.\n\nGostaríamos que continuasses esta missão: \n\nDurante o resto do dia, sempre que sentires uma emoção surgir dentro de ti tira um momento para a localizares no corpo e dá-lhe espaço com compaixão.",
          "image": {
            "source": "https://res.cloudinary.com/cupcake-29k/image/upload/q_auto,t_global/v1711547476/Images/card_Open_up_to_compassion_xqbsa2.png"
          },
          "heading": "Parabéns"
        }
      }
    ],
    "theme": {
      "textColor": "#2E2E2E",
      "backgroundColor": "#cacaca"
    },
    "hidden": false,
    "locked": false,
    "name": "Dá espaço à compaixão",
    "live": true,
    "published": true,
    "asyncDuration": 7,
    "card": {
      "imageBackgroundColor": "",
      "image": {
        "source": "https://res.cloudinary.com/cupcake-29k/image/upload/t_card_image/v1711547476/Images/card_Open_up_to_compassion_xqbsa2.png"
      }
    },
    "coCreators": [
      {
        "name": "Kristin Neff & Chris Germer, CMSC, original research",
        "url": "https://centerformsc.org/",
        "image": "https://res.cloudinary.com/cupcake-29k/image/upload/t_cocreator_image/v1697723039/Images/Germer%2C%20Neff.png"
      },
      {
        "name": "Erik Fernholm, editor",
        "url": "https://www.linkedin.com/in/lyckoaktivist/?originalSubdomain=se",
        "image": "https://res.cloudinary.com/cupcake-29k/image/upload/t_cocreator_image/v1665412608/Contributors/Erik%20Fernholm.png"
      },
      {
        "url": "https://openprocessing.org/user/183691?view=sketches&o=228",
        "name": "Aaron Reuland, artwork",
        "image": "https://res.cloudinary.com/cupcake-29k/image/upload/t_cocreator_image/v1713964400/Images/user183691_i74pfh.jpg"
      }
    ],
    "introPortal": {
      "textColor": "#2E2E2E",
      "hostNotes": [
        {
          "text": "> Começa quando estiveres pronta/o"
        }
      ],
      "videoLoop": {
        "p5JsScript": {
          "lang": "javascript",
          "code": "function loadScript(url, callback) {\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src = url;\n\n    // Optional: Provide a callback function to run once the script is loaded\n    script.onload = function() {\n        if (callback) callback();\n    };\n\n    // Append the script to the document's head\n    document.head.appendChild(script);\n}\n\n// URLs of the external JavaScript libraries\nconst simplexNoiseURL = \"https://openprocessing-usercontent.s3.amazonaws.com/files/user183691/visual2179025/h5636a7067b4b5f2d98624459645bf990/simplexNoise.js\";\nconst spectralURL = \"https://openprocessing-usercontent.s3.amazonaws.com/files/user183691/visual2179025/h5636a7067b4b5f2d98624459645bf990/spectral.min.js\";\n\n// Load the simplexNoise library first\nloadScript(simplexNoiseURL, function() {\n    console.log(\"simplexNoise.js loaded successfully!\");\n\n    // Load the spectral library next\n    loadScript(spectralURL, function() {\n        console.log(\"spectral.min.js loaded successfully!\");\n\n        // Now both libraries are loaded, you can safely use their functionality here\n        // For example, initialize your sketch or call a function that relies on these libraries\n    });\n});\n\n\n\nlet colors = [\"#c78b25\", \"#4e5b6d\", \"#636b4b\", \"#2b5c72\", \"#973535\", \"#ad9690\", \"#15171f\"]\n\nlet drops = []\nlet splatters = []\nlet straps = []\nlet simplex\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tsimplex = new openSimplexNoise(Date.now())\n\tbackground(210);\n\tlet x = random(width)\n\tlet s = noise(x / 100) * width / 50\n\tdrops.push(new drop(x, s))\n}\n\nfunction draw() {\n\tif (frameCount % 50 == 0 && frameCount < 2500) {\n\n\t\tlet x = map(simplex.noise2D(frameCount / 300, random()), -1, 1, -width / 4, width + width / 4)\n\t\tlet s = noise(x / 100) * width / 50\n\t\tdrops.push(new drop(x, s))\n    straps.push(new strap(random(width), random(height / 5, height / 2.5)))\n\t\tstraps.push(new strap(random(width), random(height / 5, height / 2.5)))\n\n\t}\n\n\n\tif (frameCount % 100 == 0 && frameCount > 500 && frameCount < 4000) {\n\t\tsplatters.push(new splatter(random(width), random(0, height * 0.66), random(height * 0.02, height * 0.1)))\n\t}\n\tfor (let d of drops) {\n\t\td.move();\n\t\td.show();\n\t\td.done();\n\t}\n\tfor (let s of splatters) {\n\t\ts.move();\n\t\ts.show();\n\t\ts.done();\n\t}\n\tfor (let st of straps) {\n\t\tst.move();\n\t\tst.show();\n\t\tst.done();\n\t}\n\n}\n\nclass splatter {\n\tconstructor(x, y, r) {\n\t\tthis.pos = createVector(x, y);\n\t\tthis.color1 = random(colors)\n\t\tthis.color2 = random(colors)\n\t\tthis.r = r\n\t\tthis.currentR = 0\n\t\tthis.runs = []\n\t\tlet amount = floor(random(15, 30))\n\t\tlet startAngle = random(TAU)\n\t\tfor (let a = 0; a < TAU; a += TAU / amount) {\n\t\t\tlet aOff = random(-TAU / 12, TAU / 12)\n\t\t\tlet sizeRange = this.r / (amount / 4)\n\t\t\tvar sp = {\n\t\t\t\tangle: a + aOff,\n\t\t\t\tsize: random(sizeRange * 0.75, sizeRange * 1.5)\n\t\t\t}\n\t\t\tthis.runs.push(sp)\n\t\t}\n\t\tthis.speed = this.r / 40\n\t}\n\n\tmove() {\n\t\tthis.currentR += this.speed\n\t}\n\n\tshow() {\n\t\tlet mixer = map(this.currentR, 0, this.r, 0, 1)\n\t\tlet filler = color(spectral.mix(this.color1, this.color2, mixer))\n\t\t// let alpha= map(this.currentR, 0, this.r, 2, 100)\n\t\t// filler.setAlpha(alpha)\n\t\tfill(filler)\n\n\t\t//probably need to add some jiggle\n\t\tfor (let r of this.runs) {\n\t\t\tlet quaver = simplex.noise2D(r.angle, this.currentR / (this.r / 3)) * r.size / 4\n\t\t\tlet xoff = simplex.noise2D(r.angle, this.currentR / 100, this.pos.x) * this.currentR / 5\n\t\t\tlet yoff = noise(r.angle, this.currentR / 100, this.pos.y) * this.currentR\n\t\t\tellipse(this.pos.x + cos(r.angle) * this.currentR + xoff, this.pos.y + sin(r.angle) * this.currentR + yoff, r.size + quaver)\n\t\t}\n\t}\n\n\tdone() {\n\t\tif (this.currentR >= this.r) {\n\t\t\tlet index = splatters.indexOf(this);\n\t\t\tsplatters.splice(index, 1);\n\t\t}\n\n\t}\n}\n\nclass drop {\n\tconstructor(x, s) {\n\t\tthis.pos = createVector(x, -s)\n\t\tthis.color1 = random(colors)\n\t\tthis.color2 = random(colors)\n\t\tthis.size = s\n\t\tthis.speed = random(1, 5)\n\t}\n\n\tmove() {\n\t\tlet xdrift = simplex.noise2D(this.pos.x / 100, frameCount / 50) * this.size / 10\n\t\tlet mover = createVector(xdrift, this.speed)\n\t\tthis.pos.add(mover)\n\n\t}\n\n\tshow() {\n\t\tnoStroke()\n\t\tlet quaver = simplex.noise3D(this.pos.y / 200, this.pos.x / 200, frameCount / 50) * this.size / 2\n\t\tlet m = map(this.pos.y, 0, height, 0, 1)\n\t\tlet mixer = color(spectral.mix(this.color1, this.color2, m))\n\t\tlet a = map(this.size, width / 100, width / 10, 75, 1)\n\t\tmixer.setAlpha(a)\n\t\tfill(mixer)\n\t\tellipse(this.pos.x, this.pos.y, this.size + quaver)\n\t}\n\n\tdone() {\n\t\tif (this.pos.y > this.size + height) {\n\t\t\tlet index = drops.indexOf(this);\n\t\t\tdrops.splice(index, 1);\n\t\t}\n\n\t}\n}\n\nclass strap {\n\tconstructor(x, h) {\n\t\tthis.h = h\n\t\tthis.w = random(width / 100, width / 40)\n\t\tthis.pos = createVector(x, height + this.w)\n\t\tthis.color1 = random(colors)\n\t\tthis.color2 = random(colors)\n\t}\n\n\tmove() {\n\t\tthis.pos.y -= 1\n\t}\n\n\tshow() {\n\t\tpush()\n\t\tlet mix = map(this.pos.y, height, height - this.h, 0, 1)\n\t\tlet filler = color(spectral.mix(this.color1, this.color2, mix))\n\t\tfill(filler)\n\t\tlet curve = map(this.pos.y, height, height - this.h, 0, this.h)\n\t\tlet xoff = simplex.noise3D(this.pos.x, this.pos.y / (this.h * 2), frameCount / 200) * curve\n\t\tlet sizing = map(this.pos.y, height, height - this.h, this.w, 1)\n\t\tellipse(this.pos.x + xoff, this.pos.y, sizing)\npop()\n\t}\n\n\tdone() {\n\t\tif (this.pos.y < height - this.h) {\n\t\t\tlet index = straps.indexOf(this);\n\t\t\tstraps.splice(index, 1);\n\t\t}\n\t}\n}"
        },
        "audio": "https://res.cloudinary.com/cupcake-29k/video/upload/v1712905258/Audio/portal_audio_open_up_to_compassion_jclox4.mp3"
      }
    },
    "tags": [
      "db34d82a-4c48-4ddd-9de5-f562d8aa1bc9",
      "34100e43-2eb8-4d35-8eb0-9fa9f78e4935"
    ],
    "link": "https://aware.29k.org/open-up-to-compassion",
    "id": "19135d2e-0e8d-418c-939d-18b0e62215ff",
    "async": true,
    "description": "Investiga onde sentes as emoções no teu corpo, para praticares a autocompaixão quando enfrentares emoções difíceis e pensamentos autocríticos."
  },
  "sv": {
    "liveDuration": 30,
    "slides": [
      {
        "type": "host",
        "hostNotes": [
          {
            "text": "Välkommen. Jag heter X och vi kommer att jobba tillsammans i ungefär 30 minuter med hur våra känslor känns i kroppen och hur vi kan möta dem med mjukhet.\n\nVi kommer att lyssna på en ljudövning tillsammans, reflektera en stund för oss själva och sedan finns det möjlighet att dela sina erfarenheter."
          },
          {
            "text": "Vi börjar med en mini-check-in. Hur känner du dig just nu? Svara gärna med två-tre ord. X, skulle du vilja börja?\n\n> Låt alla deltagare, inklusive dig själv, checka in en och en. \n\nTack för att ni checkade in. Då kör vi igång."
          }
        ]
      },
      {
        "type": "content",
        "hostNotes": [
          {
            "text": "Hitta en bekväm position. Jag startar ljudövningen så möts vi här igen efteråt.\n\n> Tryck på play för att starta ljudövningen"
          }
        ],
        "content": {
          "lottie": {
            "subtitles": "https://res.cloudinary.com/cupcake-29k/raw/upload/q_auto,t_global/v1712054991/SRT%20(captions)%20files/Open_up_to_compassion_Swe_wt9edh.srt",
            "audio": "https://res.cloudinary.com/cupcake-29k/video/upload/v1712054944/Audio/Open_up_to_compassion_Swe_mkyo0n.mp3",
            "durationTimer": true,
            "source": "https://res.cloudinary.com/cupcake-29k/raw/upload/t_card_image/v1676977421/Lottie/audio_meditation_default_black_default_omemwt.json"
          }
        }
      },
      {
        "type": "reflection",
        "hostNotes": [
          {
            "text": "Nästa steg är att tyst reflektera i en minut.\n\nHur upplevde du att verkligen känna dina känslor och möta dem med medkänsla?"
          },
          {
            "text": "Om du vill kan du skriva ner dina funderingar på ett papper, eller bara tänka fritt. Det finns inga svar som är rätt eller fel här – vad som än dyker upp är okej.\n\n> Tryck på play för att starta timern.\n\nDå har det gått en minut och det är dags att gå vidare."
          }
        ],
        "content": {
          "heading": "Hur upplevde du den här övningen?",
          "lottie": {
            "durationTimer": true,
            "duration": 59,
            "source": "https://res.cloudinary.com/cupcake-29k/raw/upload/t_card_image/v1676642915/Lottie/default_1min_black_rosi2l.json"
          }
        }
      },
      {
        "type": "sharing",
        "hostNotes": [
          {
            "text": "Det här steget handlar om att dela med sig av sin upplevelse och lyssna på andras. Vi har tre regler:\n\n1. **Det som sägs här, stannar här.**\n2. **Allt som behövs är att vi lyssnar på varandra.** Inget fixande, ingen rådgivning eller annan hjälp behövs. Vi är bara här för att utforska våra egna och andras upplevelser."
          },
          {
            "text": "3. **Allt som händer på insidan är okej.** Ilska, kärlek, smärta, glädje. Vad som än dyker upp, det finns inget rätt eller fel. Det bara är som det är.\n\nDet finns en timer på två minuter att hålla sig efter på ett ungefär. Om du inte vill dela med dig är det bara att säga 'pass'."
          },
          {
            "text": "Vem vill börja?\n\n> Låt alla, eller så många som det finns tid för, dela en efter en. Tryck på play för att starta timern. Starta om för varje person.\n\nTack så mycket för att ni lyssnar och delar med er."
          }
        ],
        "id": "Sharing 1",
        "content": {
          "heading": "Hur upplevde du den här övningen?",
          "lottie": {
            "durationTimer": true,
            "duration": 120,
            "source": "https://res.cloudinary.com/cupcake-29k/raw/upload/t_card_image/v1676639253/Lottie/default_2min_black_o6egey.json"
          }
        }
      },
      {
        "type": "host",
        "hostNotes": [
          {
            "text": "Bra jobbat. Känslor är till för att kännas. Att vara närvarande med dem kan öka vår medkänsla och göra oss mer autentiska. Om du vill så finns det ett uppdrag för dig: Under resten av dagen, så snart du känner en känsla bubbla upp, ta en kort paus. Känn var i kroppen känslan känns och gör plats för den med mjukhet och medkänsla. "
          },
          {
            "text": "Innan vi avslutar så gör vi en mini-utcheckning.\nHur känner du dig nu? Har något ändrats? Svara med två-tre ord.\n\nVem vill börja?"
          },
          {
            "text": "> Låt alla checka ut en efter en.\n\nTack så mycket för era utcheckningar, och för att ni deltog i den här sessionen.\n\n> Avsluta sessionen för att skicka deltagarna till exit-upplevelsen."
          }
        ]
      },
      {
        "type": "instruction",
        "content": {
          "text": "Känslor är till för att kännas. Att vara närvarande med dem kan öka vår medkänsla och göra oss mer autentiska. \n\nOm du vill så finns det ett uppdrag för dig: \n\nUnder resten av dagen, så snart du känner en känsla bubbla upp, ta en kort paus - känn var i kroppen känslan känns och gör plats för den, med mjukhet och medkänsla.",
          "image": {
            "source": "https://res.cloudinary.com/cupcake-29k/image/upload/q_auto,t_global/v1711547476/Images/card_Open_up_to_compassion_xqbsa2.png"
          },
          "heading": "Bra jobbat. "
        }
      }
    ],
    "theme": {
      "textColor": "#2E2E2E",
      "backgroundColor": "#cacaca"
    },
    "hidden": true,
    "locked": false,
    "name": "Öppna upp för medkänsla",
    "live": true,
    "published": true,
    "asyncDuration": 7,
    "card": {
      "imageBackgroundColor": "",
      "image": {
        "source": "https://res.cloudinary.com/cupcake-29k/image/upload/t_card_image/v1711547476/Images/card_Open_up_to_compassion_xqbsa2.png"
      }
    },
    "coCreators": [
      {
        "name": "Fredrik Livheim, röst",
        "url": "https://livskompass.se/om-fredrik-livheim/",
        "image": "https://res.cloudinary.com/cupcake-29k/image/upload/t_cocreator_image/v1665413198/Contributors/Fredrik%20Livheim.png"
      },
      {
        "name": "Kristin Neff & Chris Germer, CMSC, forskning",
        "url": "https://centerformsc.org/",
        "image": "https://res.cloudinary.com/cupcake-29k/image/upload/t_cocreator_image/v1697723039/Images/Germer%2C%20Neff.png"
      },
      {
        "name": "Erik Fernholm, redaktör",
        "url": "https://www.linkedin.com/in/lyckoaktivist/?originalSubdomain=se",
        "image": "https://res.cloudinary.com/cupcake-29k/image/upload/t_cocreator_image/v1665412608/Contributors/Erik%20Fernholm.png"
      }
    ],
    "introPortal": {
      "textColor": "#2AE2D7",
      "hostNotes": [
        {
          "text": "> Starta sessionen när ni är redo."
        }
      ],
      "videoLoop": {
        "p5JsScript": {
          "lang": "javascript",
          "code": "function loadScript(url, callback) {\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src = url;\n\n    // Optional: Provide a callback function to run once the script is loaded\n    script.onload = function() {\n        if (callback) callback();\n    };\n\n    // Append the script to the document's head\n    document.head.appendChild(script);\n}\n\n// URLs of the external JavaScript libraries\nconst simplexNoiseURL = \"https://openprocessing-usercontent.s3.amazonaws.com/files/user183691/visual2179025/h5636a7067b4b5f2d98624459645bf990/simplexNoise.js\";\nconst spectralURL = \"https://openprocessing-usercontent.s3.amazonaws.com/files/user183691/visual2179025/h5636a7067b4b5f2d98624459645bf990/spectral.min.js\";\n\n// Load the simplexNoise library first\nloadScript(simplexNoiseURL, function() {\n    console.log(\"simplexNoise.js loaded successfully!\");\n\n    // Load the spectral library next\n    loadScript(spectralURL, function() {\n        console.log(\"spectral.min.js loaded successfully!\");\n\n        // Now both libraries are loaded, you can safely use their functionality here\n        // For example, initialize your sketch or call a function that relies on these libraries\n    });\n});\n\n\n\nlet colors = [\"#c78b25\", \"#4e5b6d\", \"#636b4b\", \"#2b5c72\", \"#973535\", \"#ad9690\", \"#15171f\"]\n\nlet drops = []\nlet splatters = []\nlet straps = []\nlet simplex\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tsimplex = new openSimplexNoise(Date.now())\n\tbackground(210);\n\tlet x = random(width)\n\tlet s = noise(x / 100) * width / 50\n\tdrops.push(new drop(x, s))\n}\n\nfunction draw() {\n\tif (frameCount % 50 == 0 && frameCount < 2500) {\n\n\t\tlet x = map(simplex.noise2D(frameCount / 300, random()), -1, 1, -width / 4, width + width / 4)\n\t\tlet s = noise(x / 100) * width / 50\n\t\tdrops.push(new drop(x, s))\n    straps.push(new strap(random(width), random(height / 5, height / 2.5)))\n\t\tstraps.push(new strap(random(width), random(height / 5, height / 2.5)))\n\n\t}\n\n\n\tif (frameCount % 100 == 0 && frameCount > 500 && frameCount < 4000) {\n\t\tsplatters.push(new splatter(random(width), random(0, height * 0.66), random(height * 0.02, height * 0.1)))\n\t}\n\tfor (let d of drops) {\n\t\td.move();\n\t\td.show();\n\t\td.done();\n\t}\n\tfor (let s of splatters) {\n\t\ts.move();\n\t\ts.show();\n\t\ts.done();\n\t}\n\tfor (let st of straps) {\n\t\tst.move();\n\t\tst.show();\n\t\tst.done();\n\t}\n\n}\n\nclass splatter {\n\tconstructor(x, y, r) {\n\t\tthis.pos = createVector(x, y);\n\t\tthis.color1 = random(colors)\n\t\tthis.color2 = random(colors)\n\t\tthis.r = r\n\t\tthis.currentR = 0\n\t\tthis.runs = []\n\t\tlet amount = floor(random(15, 30))\n\t\tlet startAngle = random(TAU)\n\t\tfor (let a = 0; a < TAU; a += TAU / amount) {\n\t\t\tlet aOff = random(-TAU / 12, TAU / 12)\n\t\t\tlet sizeRange = this.r / (amount / 4)\n\t\t\tvar sp = {\n\t\t\t\tangle: a + aOff,\n\t\t\t\tsize: random(sizeRange * 0.75, sizeRange * 1.5)\n\t\t\t}\n\t\t\tthis.runs.push(sp)\n\t\t}\n\t\tthis.speed = this.r / 40\n\t}\n\n\tmove() {\n\t\tthis.currentR += this.speed\n\t}\n\n\tshow() {\n\t\tlet mixer = map(this.currentR, 0, this.r, 0, 1)\n\t\tlet filler = color(spectral.mix(this.color1, this.color2, mixer))\n\t\t// let alpha= map(this.currentR, 0, this.r, 2, 100)\n\t\t// filler.setAlpha(alpha)\n\t\tfill(filler)\n\n\t\t//probably need to add some jiggle\n\t\tfor (let r of this.runs) {\n\t\t\tlet quaver = simplex.noise2D(r.angle, this.currentR / (this.r / 3)) * r.size / 4\n\t\t\tlet xoff = simplex.noise2D(r.angle, this.currentR / 100, this.pos.x) * this.currentR / 5\n\t\t\tlet yoff = noise(r.angle, this.currentR / 100, this.pos.y) * this.currentR\n\t\t\tellipse(this.pos.x + cos(r.angle) * this.currentR + xoff, this.pos.y + sin(r.angle) * this.currentR + yoff, r.size + quaver)\n\t\t}\n\t}\n\n\tdone() {\n\t\tif (this.currentR >= this.r) {\n\t\t\tlet index = splatters.indexOf(this);\n\t\t\tsplatters.splice(index, 1);\n\t\t}\n\n\t}\n}\n\nclass drop {\n\tconstructor(x, s) {\n\t\tthis.pos = createVector(x, -s)\n\t\tthis.color1 = random(colors)\n\t\tthis.color2 = random(colors)\n\t\tthis.size = s\n\t\tthis.speed = random(1, 5)\n\t}\n\n\tmove() {\n\t\tlet xdrift = simplex.noise2D(this.pos.x / 100, frameCount / 50) * this.size / 10\n\t\tlet mover = createVector(xdrift, this.speed)\n\t\tthis.pos.add(mover)\n\n\t}\n\n\tshow() {\n\t\tnoStroke()\n\t\tlet quaver = simplex.noise3D(this.pos.y / 200, this.pos.x / 200, frameCount / 50) * this.size / 2\n\t\tlet m = map(this.pos.y, 0, height, 0, 1)\n\t\tlet mixer = color(spectral.mix(this.color1, this.color2, m))\n\t\tlet a = map(this.size, width / 100, width / 10, 75, 1)\n\t\tmixer.setAlpha(a)\n\t\tfill(mixer)\n\t\tellipse(this.pos.x, this.pos.y, this.size + quaver)\n\t}\n\n\tdone() {\n\t\tif (this.pos.y > this.size + height) {\n\t\t\tlet index = drops.indexOf(this);\n\t\t\tdrops.splice(index, 1);\n\t\t}\n\n\t}\n}\n\nclass strap {\n\tconstructor(x, h) {\n\t\tthis.h = h\n\t\tthis.w = random(width / 100, width / 40)\n\t\tthis.pos = createVector(x, height + this.w)\n\t\tthis.color1 = random(colors)\n\t\tthis.color2 = random(colors)\n\t}\n\n\tmove() {\n\t\tthis.pos.y -= 1\n\t}\n\n\tshow() {\n\t\tpush()\n\t\tlet mix = map(this.pos.y, height, height - this.h, 0, 1)\n\t\tlet filler = color(spectral.mix(this.color1, this.color2, mix))\n\t\tfill(filler)\n\t\tlet curve = map(this.pos.y, height, height - this.h, 0, this.h)\n\t\tlet xoff = simplex.noise3D(this.pos.x, this.pos.y / (this.h * 2), frameCount / 200) * curve\n\t\tlet sizing = map(this.pos.y, height, height - this.h, this.w, 1)\n\t\tellipse(this.pos.x + xoff, this.pos.y, sizing)\npop()\n\t}\n\n\tdone() {\n\t\tif (this.pos.y < height - this.h) {\n\t\t\tlet index = straps.indexOf(this);\n\t\t\tstraps.splice(index, 1);\n\t\t}\n\t}\n}"
        }
      }
    },
    "tags": [
      "db34d82a-4c48-4ddd-9de5-f562d8aa1bc9",
      "34100e43-2eb8-4d35-8eb0-9fa9f78e4935"
    ],
    "link": "https://aware.29k.org/open-up-to-compassion",
    "id": "19135d2e-0e8d-418c-939d-18b0e62215ff",
    "async": true,
    "description": "Undersök var i kroppen dina känslor känns och träna upp din självmedkänsla för att hantera jobbiga känslor och självkritiska tankar."
  },
  "ja": {
    "liveDuration": 30,
    "slides": [
      {
        "type": "host",
        "hostNotes": [
          {
            "text": "Welcome. I am X and today we will work for around 30 minutes on xx\n\nWe’ll be doing xx ex. meditation followed by time for reflection and sharing with each other."
          },
          {
            "text": "Let’s start with a mini check-in. How are you feeling right now? Please answer in two-three words. X, would you like to start?\n\n> Let everyone in the session, including yourself, check in one by one.\n\nThank you all for checking in. Let’s get started."
          }
        ]
      },
      {
        "type": "content",
        "hostNotes": [
          {
            "text": "Find a comfortable position. I will start the audio exercise and we'll meet back here afterwards. \n\n> Push play to start the audio exercise"
          }
        ]
      },
      {
        "type": "reflection",
        "hostNotes": [
          {
            "text": "Now we’ll take 1 minute to reflect on our own.\n\nxxMain question\n\nxxFurther explanations of main question if needed"
          },
          {
            "text": "You can take notes on a piece of paper or just mental notes in your head. And there is no right or wrong here, our answers are our own. 1 minute starting now.\n\n> Press play to start the timer.\n\nThat’s 1 minute and it’s time to move on."
          }
        ]
      },
      {
        "type": "sharing",
        "hostNotes": [
          {
            "text": "Now we are getting into the sharing part. We have three rules for sharing:\n\n1. **What is said in here, stays in here.**\n2. **All you need to do is listen.** There is no fixing, helping or advice-giving needed. We are just showing up and exploring what ourselves and others are going through."
          },
          {
            "text": "3. **Everything on the inside is okay.** Anger, love, hatred, sadness. Whatever shows up. No wrongs, no rights. It is what it is.\n\nThere will be a timer set for 2 minutes as an indicator. If you don’t want to share you can always say ‘pass’."
          },
          {
            "text": "Who would like to start?\n\n> Let everyone (or as many as you got time for) share one by one. Press play to start the timer. Re-start for each new sharing.\n\nThank you so much everyone."
          }
        ],
        "id": "Sharing 1"
      },
      {
        "type": "host",
        "hostNotes": [
          {
            "text": "Well done. If you’re up for it, you can continue what we started here today with a mission to bring this into your everyday life.\n\nxx mission description"
          },
          {
            "text": "Before we leave this space let’s do a mini check-out. \n\nHow are you feeling right now? Has anything shifted? Please answer in two-three words."
          },
          {
            "text": "Who would like to start?\n\n> Let everyone in the session check out one by one.\n\nThank you all for checking out and for joining this session today.\n\n> Finish session to send everyone off to the exit experience."
          }
        ]
      },
      {
        "type": "instruction",
        "content": {
          "text": "Well done.\n\nSummary.\n\nIf you’re up for it, you can continue with this mission.\n\nmission description"
        }
      }
    ],
    "theme": {
      "textColor": "#2AE2D7"
    },
    "hidden": false,
    "locked": false,
    "live": true,
    "published": false,
    "asyncDuration": 7,
    "card": {
      "imageBackgroundColor": ""
    },
    "introPortal": {
      "textColor": "#2AE2D7",
      "hostNotes": [
        {
          "text": "> Start the session when you're ready to go"
        }
      ]
    },
    "tags": [
      "db34d82a-4c48-4ddd-9de5-f562d8aa1bc9",
      "34100e43-2eb8-4d35-8eb0-9fa9f78e4935"
    ],
    "link": "https://aware.29k.org/open-up-to-compassion",
    "id": "19135d2e-0e8d-418c-939d-18b0e62215ff",
    "async": false
  },
  "da": {
    "tags": [
      "db34d82a-4c48-4ddd-9de5-f562d8aa1bc9",
      "34100e43-2eb8-4d35-8eb0-9fa9f78e4935"
    ],
    "asyncDuration": 7,
    "link": "https://aware.29k.org/open-up-to-compassion",
    "id": "19135d2e-0e8d-418c-939d-18b0e62215ff",
    "card": {
      "imageBackgroundColor": ""
    }
  },
  "cs": {
    "tags": [
      "db34d82a-4c48-4ddd-9de5-f562d8aa1bc9",
      "34100e43-2eb8-4d35-8eb0-9fa9f78e4935"
    ],
    "asyncDuration": 7,
    "link": "https://aware.29k.org/open-up-to-compassion",
    "id": "19135d2e-0e8d-418c-939d-18b0e62215ff",
    "card": {
      "imageBackgroundColor": ""
    }
  },
  "nl": {
    "tags": [
      "db34d82a-4c48-4ddd-9de5-f562d8aa1bc9",
      "34100e43-2eb8-4d35-8eb0-9fa9f78e4935"
    ],
    "asyncDuration": 7,
    "link": "https://aware.29k.org/open-up-to-compassion",
    "id": "19135d2e-0e8d-418c-939d-18b0e62215ff",
    "card": {
      "imageBackgroundColor": ""
    }
  },
  "es": {
    "liveDuration": 30,
    "slides": [
      {
        "hostNotes": [
          {
            "text": "Bienvenidos/as. Soy X y hoy trabajaremos durante unos 30 minutos sobre cómo se sienten las emociones en nuestro cuerpo y cómo podemos abordarlas con autocompasión.\n\nHaremos una meditación seguida de un tiempo para reflexión y compartir con los demás."
          },
          {
            "text": "Comencemos con una pequeña reflexión sobre cómo estamos. ¿Cómo te sientes en este momento? Por favor, responde en dos o tres palabras. X, ¿te gustaría empezar?\n\n> Permite que todos/as en la sesión, incluido tú, compartan uno a uno, una a una.\n\nGracias a todos/as por compartir. ¡Empecemos!"
          }
        ],
        "type": "host"
      },
      {
        "hostNotes": [
          {
            "text": "Encuentra una posición cómoda. Daré paso el ejercicio de audio y nos encontraremos de nuevo aquí cuando éste termine.\n\n> Pulsa play para comenzar el ejercicio"
          }
        ],
        "type": "content",
        "content": {
          "lottie": {
            "subtitles": "https://res.cloudinary.com/cupcake-29k/raw/upload/v1738512680/Spanish/Subtitles%20SRT/Abrirse_a_la_Compasio%CC%81n_n0qkzm.srt",
            "audio": "https://res.cloudinary.com/cupcake-29k/video/upload/v1748794441/Spanish/Audio%20MP3/AbrirseAlaCompasion_2_xgvvts.mp3",
            "durationTimer": true,
            "source": "https://res.cloudinary.com/cupcake-29k/raw/upload/t_card_image/v1676977421/Lottie/audio_meditation_default_black_default_omemwt.json"
          }
        }
      },
      {
        "content": {
          "heading": "¿Cómo ha sido experimentar este ejercicio?",
          "lottie": {
            "durationTimer": true,
            "duration": 59,
            "source": "https://res.cloudinary.com/cupcake-29k/raw/upload/t_card_image/v1676642915/Lottie/default_1min_black_rosi2l.json"
          }
        },
        "hostNotes": [
          {
            "text": "Ahora tomemos 1 minuto para reflexionar por nuestra cuenta.\n\n¿Cómo fue para ti conectar físicamente con las emociones y acogerlas con compasión?"
          },
          {
            "text": "Puedes tomar notas en un papel o mentalmente. No hay respuestas correctas o incorrectas, cada uno/a tiene sus propias respuestas. 1 minuto, empezando ahora.\n\n> Pulsa play para iniciar el temporizador.\n\nHa pasado 1 minuto, vamos a continuar."
          }
        ],
        "type": "reflection"
      },
      {
        "content": {
          "heading": "¿Cómo ha sido experimentar este ejercicio?",
          "lottie": {
            "durationTimer": true,
            "duration": 120,
            "source": "https://res.cloudinary.com/cupcake-29k/raw/upload/t_card_image/v1676639253/Lottie/default_2min_black_o6egey.json"
          }
        },
        "hostNotes": [
          {
            "text": "Ahora entramos en la parte de compartir. Tenemos tres reglas para compartir:\n\n1. **Lo que se diga aquí, se queda aquí.**\n2. **Todo lo que necesitas hacer es escuchar.** No se necesita arreglar, ayudar ni dar consejos. Solo estamos presentes y explorando lo que nosotros/as mismos/as y los/las demás estamos experimentando."
          },
          {
            "text": "3. **Todo lo que sentimos dentro está bien.** Ira, amor, odio, tristeza. Lo que sea que surja. No hay correcto ni incorrecto. Simplemente es lo que es, hay lo que hay.\n\nSe establecerá un temporizador de 2 minutos como indicador. Si no deseas compartir, siempre puedes decir 'paso'."
          },
          {
            "text": "¿Quién le gustaría empezar?\n\n> Deja que todos/as (o los/las que tengas tiempo) compartan uno a uno, una a una. Pulsa play para iniciar el temporizador. Reinicia el temporizador para cada nueva intervención.\n\nMuchas gracias a todos/as."
          }
        ],
        "type": "sharing",
        "id": "Sharing 1"
      },
      {
        "hostNotes": [
          {
            "text": "¡Bien hecho! Las emociones están aquí para ser sentidas, y estar presentes con ellas puede permitirnos ser compasivos/as y auténticos/as. Puedes continuar tu práctica con un ejercicio:\n\nPara el resto del día, cada vez que sientas que una emoción está despertando algo dentro de ti, tómate un momento para localizarla en el cuerpo y para hacerle espacio con compasión."
          },
          {
            "text": "Antes de salir de este espacio, hagamos una breve reflexión sobre qué ha cambiado.\n\n¿Cómo te sientes en este momento? ¿Ha cambiado algo? Por favor, responde en dos o tres palabras."
          },
          {
            "text": "¿Quién le gustaría empezar?\n\n> Deja que todos/as en la sesión compartan y/o se despidan uno por uno, una por una.\n\nGracias a todos/as por compartir y por uniros hoy a esta sesión.\n\n> Finaliza la sesión para enviar a todos/as a la experiencia de salida."
          }
        ],
        "type": "host"
      },
      {
        "content": {
          "heading": "Bien hecho.",
          "text": "Las emociones están aquí para ser sentidas, y estar presentes con ellas puede permitirnos ser compasivos/as y auténticos/as. Puedes continuar tu práctica con un ejercicio:\n\nPara el resto del día, cada vez que sientas que una emoción está despertando algo dentro de ti, tómate un momento para localizarla en el cuerpo y para hacerle espacio con compasión.",
          "image": {
            "source": "https://res.cloudinary.com/cupcake-29k/image/upload/q_auto,t_global/v1711547476/Images/card_Open_up_to_compassion_xqbsa2.png"
          }
        },
        "type": "instruction"
      }
    ],
    "theme": {
      "textColor": "#2E2E2E",
      "backgroundColor": "#cacaca"
    },
    "hidden": false,
    "locked": false,
    "name": "Abrirse a la compasión",
    "live": true,
    "published": true,
    "asyncDuration": 7,
    "card": {
      "imageBackgroundColor": "",
      "image": {
        "source": "https://res.cloudinary.com/cupcake-29k/image/upload/t_card_image/v1711547476/Images/card_Open_up_to_compassion_xqbsa2.png"
      }
    },
    "coCreators": [
      {
        "name": "Kristin Neff & Chris Germer, CMSC, original research",
        "url": "https://centerformsc.org/",
        "image": "https://res.cloudinary.com/cupcake-29k/image/upload/t_cocreator_image/v1697723039/Images/Germer%2C%20Neff.png"
      },
      {
        "name": "Erik Fernholm, editor",
        "url": "https://www.linkedin.com/in/lyckoaktivist/?originalSubdomain=se",
        "image": "https://res.cloudinary.com/cupcake-29k/image/upload/t_cocreator_image/v1665412608/Contributors/Erik%20Fernholm.png"
      },
      {
        "url": "https://openprocessing.org/user/183691?view=sketches&o=228",
        "name": "Aaron Reuland, artwork",
        "image": "https://res.cloudinary.com/cupcake-29k/image/upload/t_cocreator_image/v1713964400/Images/user183691_i74pfh.jpg"
      },
      {
        "name": "Núria Tous, voz en Español",
        "url": "https://www.linkedin.com/in/nuriatous/"
      }
    ],
    "introPortal": {
      "hostNotes": [
        {
          "text": "Inicia la sesión cuando estés listo/a para comenzar"
        }
      ],
      "videoLoop": {
        "p5JsScript": {
          "lang": "javascript",
          "code": "function loadScript(url, callback) {\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src = url;\n\n    // Optional: Provide a callback function to run once the script is loaded\n    script.onload = function() {\n        if (callback) callback();\n    };\n\n    // Append the script to the document's head\n    document.head.appendChild(script);\n}\n\n// URLs of the external JavaScript libraries\nconst simplexNoiseURL = \"https://openprocessing-usercontent.s3.amazonaws.com/files/user183691/visual2179025/h5636a7067b4b5f2d98624459645bf990/simplexNoise.js\";\nconst spectralURL = \"https://openprocessing-usercontent.s3.amazonaws.com/files/user183691/visual2179025/h5636a7067b4b5f2d98624459645bf990/spectral.min.js\";\n\n// Load the simplexNoise library first\nloadScript(simplexNoiseURL, function() {\n    console.log(\"simplexNoise.js loaded successfully!\");\n\n    // Load the spectral library next\n    loadScript(spectralURL, function() {\n        console.log(\"spectral.min.js loaded successfully!\");\n\n        // Now both libraries are loaded, you can safely use their functionality here\n        // For example, initialize your sketch or call a function that relies on these libraries\n    });\n});\n\n\n\nlet colors = [\"#c78b25\", \"#4e5b6d\", \"#636b4b\", \"#2b5c72\", \"#973535\", \"#ad9690\", \"#15171f\"]\n\nlet drops = []\nlet splatters = []\nlet straps = []\nlet simplex\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tsimplex = new openSimplexNoise(Date.now())\n\tbackground(210);\n\tlet x = random(width)\n\tlet s = noise(x / 100) * width / 50\n\tdrops.push(new drop(x, s))\n}\n\nfunction draw() {\n\tif (frameCount % 50 == 0 && frameCount < 2500) {\n\n\t\tlet x = map(simplex.noise2D(frameCount / 300, random()), -1, 1, -width / 4, width + width / 4)\n\t\tlet s = noise(x / 100) * width / 50\n\t\tdrops.push(new drop(x, s))\n    straps.push(new strap(random(width), random(height / 5, height / 2.5)))\n\t\tstraps.push(new strap(random(width), random(height / 5, height / 2.5)))\n\n\t}\n\n\n\tif (frameCount % 100 == 0 && frameCount > 500 && frameCount < 4000) {\n\t\tsplatters.push(new splatter(random(width), random(0, height * 0.66), random(height * 0.02, height * 0.1)))\n\t}\n\tfor (let d of drops) {\n\t\td.move();\n\t\td.show();\n\t\td.done();\n\t}\n\tfor (let s of splatters) {\n\t\ts.move();\n\t\ts.show();\n\t\ts.done();\n\t}\n\tfor (let st of straps) {\n\t\tst.move();\n\t\tst.show();\n\t\tst.done();\n\t}\n\n}\n\nclass splatter {\n\tconstructor(x, y, r) {\n\t\tthis.pos = createVector(x, y);\n\t\tthis.color1 = random(colors)\n\t\tthis.color2 = random(colors)\n\t\tthis.r = r\n\t\tthis.currentR = 0\n\t\tthis.runs = []\n\t\tlet amount = floor(random(15, 30))\n\t\tlet startAngle = random(TAU)\n\t\tfor (let a = 0; a < TAU; a += TAU / amount) {\n\t\t\tlet aOff = random(-TAU / 12, TAU / 12)\n\t\t\tlet sizeRange = this.r / (amount / 4)\n\t\t\tvar sp = {\n\t\t\t\tangle: a + aOff,\n\t\t\t\tsize: random(sizeRange * 0.75, sizeRange * 1.5)\n\t\t\t}\n\t\t\tthis.runs.push(sp)\n\t\t}\n\t\tthis.speed = this.r / 40\n\t}\n\n\tmove() {\n\t\tthis.currentR += this.speed\n\t}\n\n\tshow() {\n\t\tlet mixer = map(this.currentR, 0, this.r, 0, 1)\n\t\tlet filler = color(spectral.mix(this.color1, this.color2, mixer))\n\t\t// let alpha= map(this.currentR, 0, this.r, 2, 100)\n\t\t// filler.setAlpha(alpha)\n\t\tfill(filler)\n\n\t\t//probably need to add some jiggle\n\t\tfor (let r of this.runs) {\n\t\t\tlet quaver = simplex.noise2D(r.angle, this.currentR / (this.r / 3)) * r.size / 4\n\t\t\tlet xoff = simplex.noise2D(r.angle, this.currentR / 100, this.pos.x) * this.currentR / 5\n\t\t\tlet yoff = noise(r.angle, this.currentR / 100, this.pos.y) * this.currentR\n\t\t\tellipse(this.pos.x + cos(r.angle) * this.currentR + xoff, this.pos.y + sin(r.angle) * this.currentR + yoff, r.size + quaver)\n\t\t}\n\t}\n\n\tdone() {\n\t\tif (this.currentR >= this.r) {\n\t\t\tlet index = splatters.indexOf(this);\n\t\t\tsplatters.splice(index, 1);\n\t\t}\n\n\t}\n}\n\nclass drop {\n\tconstructor(x, s) {\n\t\tthis.pos = createVector(x, -s)\n\t\tthis.color1 = random(colors)\n\t\tthis.color2 = random(colors)\n\t\tthis.size = s\n\t\tthis.speed = random(1, 5)\n\t}\n\n\tmove() {\n\t\tlet xdrift = simplex.noise2D(this.pos.x / 100, frameCount / 50) * this.size / 10\n\t\tlet mover = createVector(xdrift, this.speed)\n\t\tthis.pos.add(mover)\n\n\t}\n\n\tshow() {\n\t\tnoStroke()\n\t\tlet quaver = simplex.noise3D(this.pos.y / 200, this.pos.x / 200, frameCount / 50) * this.size / 2\n\t\tlet m = map(this.pos.y, 0, height, 0, 1)\n\t\tlet mixer = color(spectral.mix(this.color1, this.color2, m))\n\t\tlet a = map(this.size, width / 100, width / 10, 75, 1)\n\t\tmixer.setAlpha(a)\n\t\tfill(mixer)\n\t\tellipse(this.pos.x, this.pos.y, this.size + quaver)\n\t}\n\n\tdone() {\n\t\tif (this.pos.y > this.size + height) {\n\t\t\tlet index = drops.indexOf(this);\n\t\t\tdrops.splice(index, 1);\n\t\t}\n\n\t}\n}\n\nclass strap {\n\tconstructor(x, h) {\n\t\tthis.h = h\n\t\tthis.w = random(width / 100, width / 40)\n\t\tthis.pos = createVector(x, height + this.w)\n\t\tthis.color1 = random(colors)\n\t\tthis.color2 = random(colors)\n\t}\n\n\tmove() {\n\t\tthis.pos.y -= 1\n\t}\n\n\tshow() {\n\t\tpush()\n\t\tlet mix = map(this.pos.y, height, height - this.h, 0, 1)\n\t\tlet filler = color(spectral.mix(this.color1, this.color2, mix))\n\t\tfill(filler)\n\t\tlet curve = map(this.pos.y, height, height - this.h, 0, this.h)\n\t\tlet xoff = simplex.noise3D(this.pos.x, this.pos.y / (this.h * 2), frameCount / 200) * curve\n\t\tlet sizing = map(this.pos.y, height, height - this.h, this.w, 1)\n\t\tellipse(this.pos.x + xoff, this.pos.y, sizing)\npop()\n\t}\n\n\tdone() {\n\t\tif (this.pos.y < height - this.h) {\n\t\t\tlet index = straps.indexOf(this);\n\t\t\tstraps.splice(index, 1);\n\t\t}\n\t}\n}"
        },
        "audio": "https://res.cloudinary.com/cupcake-29k/video/upload/v1712905258/Audio/portal_audio_open_up_to_compassion_jclox4.mp3"
      },
      "textColor": "#2E2E2E"
    },
    "tags": [
      "db34d82a-4c48-4ddd-9de5-f562d8aa1bc9",
      "34100e43-2eb8-4d35-8eb0-9fa9f78e4935"
    ],
    "link": "https://aware.29k.org/open-up-to-compassion",
    "id": "19135d2e-0e8d-418c-939d-18b0e62215ff",
    "async": true,
    "description": "Investiga dónde se sienten las emociones en tu cuerpo para practicar la autocompasión, especialmente cuando enfrentamos emociones difíciles y/o pensamientos autocríticos."
  }
}
